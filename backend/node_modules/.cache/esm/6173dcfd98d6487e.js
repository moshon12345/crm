let express,cors,signup,getLoginStatus,login,logout,addCustomer,deleteCustomer,getCustomer,getCustomerDetails,getCustomers,updateCustomer,addContact,deleteContact,getContact,getContactDetails,getContacts,getContactSearch,updateContact,googleLogIn,GoogleSignUp;_98d‍.w("express",[["default",["express"],function(v){express=v}]]);_98d‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_98d‍.w("./sqlConnect");_98d‍.w("./services/signup",[["signup",["signup"],function(v){signup=v}]]);_98d‍.w("./services/login",[["getLoginStatus",["getLoginStatus"],function(v){getLoginStatus=v}],["login",["login"],function(v){login=v}],["logout",["logout"],function(v){logout=v}]]);_98d‍.w("./services/customers",[["addCustomer",["addCustomer"],function(v){addCustomer=v}],["deleteCustomer",["deleteCustomer"],function(v){deleteCustomer=v}],["getCustomer",["getCustomer"],function(v){getCustomer=v}],["getCustomerDetails",["getCustomerDetails"],function(v){getCustomerDetails=v}],["getCustomers",["getCustomers"],function(v){getCustomers=v}],["updateCustomer",["updateCustomer"],function(v){updateCustomer=v}]]);_98d‍.w("./services/contacts",[["addContact",["addContact"],function(v){addContact=v}],["deleteContact",["deleteContact"],function(v){deleteContact=v}],["getContact",["getContact"],function(v){getContact=v}],["getContactDetails",["getContactDetails"],function(v){getContactDetails=v}],["getContacts",["getContacts"],function(v){getContacts=v}],["getContactSearch",["getContactSearch"],function(v){getContactSearch=v}],["updateContact",["updateContact"],function(v){updateContact=v}]]);_98d‍.w("./services/googleSignUp",[["googleLogIn",["googleLogIn"],function(v){googleLogIn=v}],["GoogleSignUp",["GoogleSignUp"],function(v){GoogleSignUp=v}]]);







const session = require('express-session');

const app = express();

const unGuards = [
    '/login',
    '/logout',
    '/signup',
];

app.use(session({
    secret: 'my-secret',
    name: 'mySession',
    resave: false,
    saveUninitialized: false,
}));

app.use(cors({
    origin: true,
    methods: 'GET,PUT,POST,DELETE,OPTIONS',
    credentials: true,
    allowedHeaders: 'Content-Type, Accept',
}));

app.use(express.json());

app.listen(3000, () => {
    console.log('listening on 3000');
});

app.get('/', (req, res) => {
    res.send("Hello World");
});

app.get('/users/:userId', (req, res) => {
    res.send({
        params: req.params,
        query: req.query,
    });
});

function authGurd(req, res, next) {
    if (req.session.user) {
        next();
    } else {
        res.sendStatus(401);
    }
}

app.get('/contacts', authGurd, getContacts); 
app.get('/contacts/:select/:search', authGurd, getContactSearch); 
app.post('/contacts/add', authGurd, addContact); 
app.delete('/contacts/delete/:contactId', authGurd, deleteContact); 
app.get('/contactEdit/:id', authGurd, getContact); 
app.put('/contactEdit/:id', authGurd, updateContact);
app.get('/contactDetails/:id', authGurd, getContactDetails); 

app.get('/customers', authGurd, getCustomers); 
app.post('/customers/add', authGurd, addCustomer); 
app.delete('/customers/delete/:customerId', authGurd, deleteCustomer); 
app.get('/customerEdit/:id', authGurd, getCustomer); 
app.put('/customerEdit/:id', authGurd, updateCustomer); 
app.get('/customerDetails/:id', authGurd, getCustomerDetails); 

app.post('/googleSignUp', GoogleSignUp);
app.post('/googleSignUp', googleLogIn);

app.get('/login', getLoginStatus);
app.get('/logout', logout);
app.post('/signup', signup);
app.post('/login', login);
